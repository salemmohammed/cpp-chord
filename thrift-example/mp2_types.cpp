/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "mp2_types.h"

namespace mp2 {

const char* MyObject::ascii_fingerprint = "6A3D2373194374708487046795BFE36B";
const uint8_t MyObject::binary_fingerprint[16] = {0x6A,0x3D,0x23,0x73,0x19,0x43,0x74,0x70,0x84,0x87,0x04,0x67,0x95,0xBF,0xE3,0x6B};

uint32_t MyObject::read(::apache::thrift::protocol::TProtocol* iprot) {

  uint32_t xfer = 0;
  std::string fname;
  ::apache::thrift::protocol::TType ftype;
  int16_t fid;

  xfer += iprot->readStructBegin(fname);

  using ::apache::thrift::protocol::TProtocolException;


  while (true)
  {
    xfer += iprot->readFieldBegin(fname, ftype, fid);
    if (ftype == ::apache::thrift::protocol::T_STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
        if (ftype == ::apache::thrift::protocol::T_I32) {
          xfer += iprot->readI32(this->i);
          this->__isset.i = true;
        } else {
          xfer += iprot->skip(ftype);
        }
        break;
      case 2:
        if (ftype == ::apache::thrift::protocol::T_STRING) {
          xfer += iprot->readString(this->s);
          this->__isset.s = true;
        } else {
          xfer += iprot->skip(ftype);
        }
        break;
      case 3:
        if (ftype == ::apache::thrift::protocol::T_DOUBLE) {
          xfer += iprot->readDouble(this->d);
          this->__isset.d = true;
        } else {
          xfer += iprot->skip(ftype);
        }
        break;
      default:
        xfer += iprot->skip(ftype);
        break;
    }
    xfer += iprot->readFieldEnd();
  }

  xfer += iprot->readStructEnd();

  return xfer;
}

uint32_t MyObject::write(::apache::thrift::protocol::TProtocol* oprot) const {
  uint32_t xfer = 0;
  xfer += oprot->writeStructBegin("MyObject");
  xfer += oprot->writeFieldBegin("i", ::apache::thrift::protocol::T_I32, 1);
  xfer += oprot->writeI32(this->i);
  xfer += oprot->writeFieldEnd();
  xfer += oprot->writeFieldBegin("s", ::apache::thrift::protocol::T_STRING, 2);
  xfer += oprot->writeString(this->s);
  xfer += oprot->writeFieldEnd();
  xfer += oprot->writeFieldBegin("d", ::apache::thrift::protocol::T_DOUBLE, 3);
  xfer += oprot->writeDouble(this->d);
  xfer += oprot->writeFieldEnd();
  xfer += oprot->writeFieldStop();
  xfer += oprot->writeStructEnd();
  return xfer;
}

} // namespace
